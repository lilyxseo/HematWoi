import type { LucideIcon } from "lucide-react";
import {
  Bell,
  Calendar,
  ChartLine,
  Circle,
  FolderKanban,
  Home,
  List,
  PieChart,
  PiggyBank,
  Receipt,
  Repeat,
  Settings,
  Shield,
  Tag,
  Target,
  TrendingUp,
  User,
  Wallet,
} from "lucide-react";

export const ICONS: Record<string, LucideIcon> = {
  home: Home,
  dashboard: Home,
  wallet: Wallet,
  wallets: Wallet,
  saving: PiggyBank,
  savings: PiggyBank,
  piggybank: PiggyBank,
  "piggy-bank": PiggyBank,
  piggy_bank: PiggyBank,
  budget: PiggyBank,
  budgets: PiggyBank,
  target: Target,
  goal: Target,
  goals: Target,
  tag: Tag,
  tags: Tag,
  label: Tag,
  labels: Tag,
  repeat: Repeat,
  recurring: Repeat,
  list: List,
  lists: List,
  tasks: List,
  checklist: List,
  chartline: ChartLine,
  chart: ChartLine,
  charts: ChartLine,
  analytics: ChartLine,
  analysis: ChartLine,
  graph: ChartLine,
  graphs: ChartLine,
  data: ChartLine,
  debt: ChartLine,
  debts: ChartLine,
  shield: Shield,
  security: Shield,
  protect: Shield,
  protection: Shield,
  settings: Settings,
  preference: Settings,
  preferences: Settings,
  config: Settings,
  configuration: Settings,
  user: User,
  users: User,
  profile: User,
  account: User,
  person: User,
  people: User,
  bell: Bell,
  notification: Bell,
  notifications: Bell,
  alert: Bell,
  alerts: Bell,
  reminder: Bell,
  reminders: Bell,
  subscription: Bell,
  subscriptions: Bell,
  piechart: PieChart,
  "pie-chart": PieChart,
  pie_chart: PieChart,
  calendar: Calendar,
  schedule: Calendar,
  date: Calendar,
  dates: Calendar,
  folderkanban: FolderKanban,
  "folder-kanban": FolderKanban,
  folder: FolderKanban,
  folders: FolderKanban,
  kanban: FolderKanban,
  board: FolderKanban,
  category: FolderKanban,
  categories: FolderKanban,
  project: FolderKanban,
  projects: FolderKanban,
  trendingup: TrendingUp,
  trending: TrendingUp,
  trend: TrendingUp,
  growth: TrendingUp,
  progress: TrendingUp,
  performance: TrendingUp,
  insight: TrendingUp,
  insights: TrendingUp,
  receipt: Receipt,
  receipts: Receipt,
  transaction: Receipt,
  transactions: Receipt,
  report: Receipt,
  reports: Receipt,
  invoice: Receipt,
  invoices: Receipt,
  statement: Receipt,
};

export const ICON_NAMES = Object.keys(ICONS).sort((a, b) => a.localeCompare(b));

interface IconProps {
  name?: string | null;
  className?: string;
  label?: string;
}

export function Icon({ name, className, label }: IconProps) {
  const normalized = typeof name === "string" ? name.trim().toLowerCase() : "";
  const IconComponent = normalized ? ICONS[normalized] ?? Circle : Circle;

  return (
    <IconComponent
      aria-label={label ?? (normalized || "icon")}
      className={className ?? "w-5 h-5"}
    />
  );
}
