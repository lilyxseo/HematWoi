import type { Icon as PhosphorIcon } from "@phosphor-icons/react";
import {
  ArrowDown,
  ArrowUp,
  ArrowsClockwise,
  BellSimple,
  CalendarBlank,
  ChartLineUp,
  Circle,
  Folders,
  GearSix,
  House,
  ListBullets,
  PencilSimple,
  PieChart,
  PiggyBank,
  Receipt,
  ShieldCheck,
  SquaresFour,
  Tag,
  Target,
  TrendUp,
  Trash,
  User,
  Wallet,
} from "@phosphor-icons/react";

export const ICONS: Record<string, PhosphorIcon> = {
  home: House,
  dashboard: SquaresFour,
  wallet: Wallet,
  wallets: Wallet,
  saving: PiggyBank,
  savings: PiggyBank,
  piggybank: PiggyBank,
  "piggy-bank": PiggyBank,
  piggy_bank: PiggyBank,
  budget: PiggyBank,
  budgets: PiggyBank,
  target: Target,
  goal: Target,
  goals: Target,
  tag: Tag,
  tags: Tag,
  label: Tag,
  labels: Tag,
  repeat: ArrowsClockwise,
  recurring: ArrowsClockwise,
  list: ListBullets,
  lists: ListBullets,
  tasks: ListBullets,
  checklist: ListBullets,
  chartline: ChartLineUp,
  chart: ChartLineUp,
  charts: ChartLineUp,
  analytics: ChartLineUp,
  analysis: ChartLineUp,
  graph: ChartLineUp,
  graphs: ChartLineUp,
  data: ChartLineUp,
  debt: ChartLineUp,
  debts: ChartLineUp,
  shield: ShieldCheck,
  security: ShieldCheck,
  protect: ShieldCheck,
  protection: ShieldCheck,
  settings: GearSix,
  preference: GearSix,
  preferences: GearSix,
  config: GearSix,
  configuration: GearSix,
  user: User,
  users: User,
  profile: User,
  account: User,
  person: User,
  people: User,
  bell: BellSimple,
  notification: BellSimple,
  notifications: BellSimple,
  alert: BellSimple,
  alerts: BellSimple,
  reminder: BellSimple,
  reminders: BellSimple,
  subscription: BellSimple,
  subscriptions: BellSimple,
  piechart: PieChart,
  "pie-chart": PieChart,
  pie_chart: PieChart,
  calendar: CalendarBlank,
  schedule: CalendarBlank,
  date: CalendarBlank,
  dates: CalendarBlank,
  folderkanban: Folders,
  "folder-kanban": Folders,
  folder: Folders,
  folders: Folders,
  kanban: Folders,
  board: Folders,
  category: Tag,
  categories: Tag,
  project: Folders,
  projects: Folders,
  trendingup: TrendUp,
  trending: TrendUp,
  trend: TrendUp,
  growth: TrendUp,
  progress: TrendUp,
  performance: TrendUp,
  insight: TrendUp,
  insights: TrendUp,
  receipt: Receipt,
  receipts: Receipt,
  transaction: Receipt,
  transactions: Receipt,
  report: Receipt,
  reports: Receipt,
  invoice: Receipt,
  invoices: Receipt,
  statement: Receipt,
  'arrow-up': ArrowUp,
  arrowup: ArrowUp,
  arrow_up: ArrowUp,
  up: ArrowUp,
  'arrow-down': ArrowDown,
  arrowdown: ArrowDown,
  arrow_down: ArrowDown,
  down: ArrowDown,
  pencil: PencilSimple,
  edit: PencilSimple,
  pen: PencilSimple,
  trash: Trash,
  delete: Trash,
  remove: Trash,
};

export const ICON_NAMES = Object.keys(ICONS).sort((a, b) => a.localeCompare(b));

interface IconProps {
  name?: string | null;
  className?: string;
  label?: string;
}

export function Icon({ name, className, label }: IconProps) {
  const normalized = typeof name === "string" ? name.trim().toLowerCase() : "";
  const IconComponent = normalized ? ICONS[normalized] ?? Circle : Circle;

  return (
    <IconComponent
      aria-label={label ?? (normalized || "icon")}
      className={className ?? "w-5 h-5"}
      weight="duotone"
    />
  );
}
